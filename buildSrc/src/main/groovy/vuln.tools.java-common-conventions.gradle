/*
 * This file was generated by the Gradle 'init' task.
 */

plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
    id 'com.diffplug.spotless'
    id 'com.github.spotbugs'
}

group 'io.github.jeremylong'

repositories {
    mavenCentral()
    gradlePluginPortal()
}

dependencies {

    compileOnly 'com.github.spotbugs:spotbugs-annotations:4.8.6'

    testImplementation platform('org.junit:junit-bom:5.10.3')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

spotless {
    java {
        targetExclude(fileTree("$buildDir/generated") { include("**/*.java") })
        eclipse().configFile("$rootDir/buildSrc/src/main/config/spotless.eclipseformat.xml")
        licenseHeaderFile("$rootDir/buildSrc/src/main/config/java.license").updateYearWithLatest(true)
    }
}

spotbugs {
    excludeFilter.set(file("$rootDir/buildSrc/src/main/config/spotbugs.exclude.xml"))
    reportsDir = file("$buildDir/spotbugs")
}
compileJava {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    options.encoding = 'UTF-8'
}
tasks.withType(AbstractArchiveTask).configureEach {
    preserveFileTimestamps = false
    reproducibleFileOrder = true
}
javadoc {
    failOnError = false
    options.encoding("UTF-8")
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}
java {
    withSourcesJar()
    withJavadocJar()
}
signing {
    sign publishing.publications
}
sourcesJar.dependsOn(compileJava)
sourcesJar.dependsOn(compileTestJava)
javadoc.dependsOn(compileTestJava)

publishing {
    repositories {
        maven {
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username project.findProperty('sonatypeUsername_s01') ?: System.getenv("SONATYPE_USER")
                password project.findProperty('sonatypePassword_s01') ?: System.getenv("SONATYPE_PASSWORD")
            }
        }
    }
}