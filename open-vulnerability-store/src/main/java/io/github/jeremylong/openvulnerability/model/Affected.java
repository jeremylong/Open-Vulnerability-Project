/*
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) 2023-2024 Jeremy Long. All Rights Reserved.
 */
package io.github.jeremylong.openvulnerability.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import jakarta.persistence.CascadeType;
import jakarta.persistence.CollectionTable;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.OneToMany;
import jakarta.persistence.Table;
import org.hibernate.annotations.UuidGenerator;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Entity
@Table(name = "AFFECTED")
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonPropertyOrder({"ecosystem", "name", "purl", "severities", "ranges"})
public class Affected {
    @Id
    @GeneratedValue
    @UuidGenerator
    @Column(name = "ID", nullable = false, unique = true)
    @JsonIgnore
    private UUID id;

    @JsonProperty("ecosystem")
    @Column(name = "ECOSYSTEM")
    private String ecosystem;

    @JsonProperty("name")
    @Column(name = "NAME")
    private String name;

    @JsonProperty("purl")
    @Column(name = "PURL")
    private String purl;

    /**
     * @deprecated The cpe field only exists to support the NVD - the CPE matches are useless for identifying vulnerable
     * software. They are being used to hopefully identify the correct package URL.
     */
    @Deprecated()
    @Column(name = "CPE")
    private String cpe;

    @JsonProperty("severities")
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "AFFECTED_ID")
    private List<Severity> severities = new ArrayList<>();

    @JsonProperty("ranges")
    @OneToMany(cascade = CascadeType.ALL, fetch = FetchType.LAZY, orphanRemoval = true)
    @JoinColumn(name = "AFFECTED_ID")
    private List<Range> ranges = new ArrayList<>();

    @JsonProperty("versions")
    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name = "VERSIONS", joinColumns = @JoinColumn(name = "AFFECTED_ID"))
    @Column(name = "VERSIONS")
    private List<String> versions;

    public UUID getId() {
        return id;
    }

    public String getEcosystem() {
        return ecosystem;
    }

    public void setEcosystem(String ecosystem) {
        this.ecosystem = ecosystem;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getPurl() {
        return purl;
    }

    public void setPurl(String purl) {
        this.purl = purl;
    }

    @SuppressFBWarnings(value = {"EI_EXPOSE_REP",
            "EI_EXPOSE_REP2"}, justification = "I prefer to suppress these FindBugs warnings")
    public List<Severity> getSeverities() {
        return severities;
    }

    public boolean addSeverity(Severity severity) {
        return severities.add(severity);
    }

    public boolean removeSeverity(Severity severity) {
        return severities.remove(severity);
    }

    @SuppressFBWarnings(value = {"EI_EXPOSE_REP",
            "EI_EXPOSE_REP2"}, justification = "I prefer to suppress these FindBugs warnings")
    public List<Range> getRanges() {
        return ranges;
    }

    public boolean addRange(Range range) {
        return ranges.add(range);
    }

    public boolean removeRange(Range range) {
        return ranges.remove(range);
    }

    @SuppressFBWarnings(value = {"EI_EXPOSE_REP",
            "EI_EXPOSE_REP2"}, justification = "I prefer to suppress these FindBugs warnings")
    public List<String> getVersions() {
        return versions;
    }

    public boolean addVersion(String version) {
        return versions.add(version);
    }

    public boolean removeVersion(String version) {
        return versions.remove(version);
    }

    /**
     * Returns the CPE value.
     *
     * @return the cpe
     * @deprecated The cpe field only exists to support the NVD - the CPE matches are useless for identifying vulnerable
     * software. They are being used to hopefully identify the correct package URL.
     */
    @Deprecated()
    public String getCpe() {
        return cpe;
    }

    /**
     * Sets the cpe value.
     *
     * @param cpe the cpe
     * @deprecated The cpe field only exists to support the NVD - the CPE matches are useless for identifying vulnerable
     * software. They are being used to hopefully identify the correct package URL.
     */
    @Deprecated()
    public void setCpe(String cpe) {
        this.cpe = cpe;
    }
}
