/*
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 * SPDX-License-Identifier: Apache-2.0
 * Copyright (c) 2023 Jeremy Long. All Rights Reserved.
 */
package io.github.jeremylong.vulntools.database.model.osv.modified;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import edu.umd.cs.findbugs.annotations.SuppressFBWarnings;
import jakarta.persistence.CollectionTable;
import jakarta.persistence.Column;
import jakarta.persistence.ElementCollection;
import jakarta.persistence.Entity;
import jakarta.persistence.FetchType;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.Table;
import org.hibernate.annotations.UuidGenerator;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

@Entity
@Table(name = "CREDIT")
@JsonIgnoreProperties(ignoreUnknown = true)
@JsonPropertyOrder({"name", "contact", "type"})
public class Credit {
    @Id
    @GeneratedValue
    @UuidGenerator
    @Column(name = "ID", nullable = false, unique = true)
    @JsonIgnore
    private UUID id;

    @JsonProperty("name")
    @Column(name = "NAME")
    private String name;

    @JsonProperty("contact")
    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name = "CONTACT", joinColumns = @JoinColumn(name = "CREDIT_ID"))
    @Column(name = "CONTACT")
    private List<String> contact = new ArrayList<>();

    @JsonProperty("type")
    @ElementCollection(fetch = FetchType.LAZY)
    @CollectionTable(name = "TYPE", joinColumns = @JoinColumn(name = "CREDIT_ID"))
    @Column(name = "TYPE")
    private List<String> type = new ArrayList<>();

    public UUID getId() {
        return id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    @SuppressFBWarnings(value = {"EI_EXPOSE_REP",
            "EI_EXPOSE_REP2"}, justification = "I prefer to suppress these FindBugs warnings")
    public List<String> getContact() {
        return contact;
    }

    public boolean addContact(String contact) {
        return this.contact.add(contact);
    }

    public boolean removeContact(String contact) {
        return this.contact.remove(contact);
    }

    @SuppressFBWarnings(value = {"EI_EXPOSE_REP",
            "EI_EXPOSE_REP2"}, justification = "I prefer to suppress these FindBugs warnings")
    public List<String> getType() {
        return type;
    }

    public boolean addType(String type) {
        return this.type.add(type);
    }

    public boolean removeType(String type) {
        return this.type.remove(type);
    }
}
